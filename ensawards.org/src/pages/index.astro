---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import AppLeaderboardCard from "../components/atoms/cards/AppLeaderboardCard.astro";
import CategoryCard from "../components/atoms/cards/CategoryCard.astro";
import SuggestionCard from "../components/atoms/cards/SuggestionCard.astro";
import ItemsList from "../components/molecules/ItemsList.astro";
import Hero from "../components/molecules/Hero.astro";
import { appsData } from "../data/appData";
import { bestPracticesCategoryCards } from "../data/bestPracticesData";
import Layout from "../layouts/Layout.astro";
import { normalizeText } from "../utils";

const images = import.meta.glob<{ default: ImageMetadata }>("/src/assets/*.{jpeg,jpg,png,gif,svg}");
const placeIcons = [
  "/src/assets/firstPlaceAward.svg",
  "/src/assets/secondPlaceAward.svg",
  "/src/assets/thirdPlaceAward.svg",
];
---

<Layout>
  <Hero />
  <section
    id="previews-section"
    class="w-full box-border h-fit flex flex-col flex-nowrap justify-center items-center gap-10 py-5 sm:py-[60px] px-5 sm:px-8">
    <ItemsList
      header="App benchmarks"
      seeAllLink="/benchmarks"
      containerStyles="gap-3 sm:gap-3">
      {
        appsData.map((app, idx) => (
          <AppLeaderboardCard
            key={`app-review-card-${normalizeText(app.name)}`}
            name={app.name}
            ensAwardsScore={app.ensAwardsScore}
            type={app.type}
            viewBenchmarksLink={`/benchmarks/${normalizeText(app.name)}`}>
            <Image
              src={images[app.iconSourceLink]()}
              alt={`${app.id}-LP`}
              slot="appIcon"
              class="rounded-md"
            />
            {idx < 3 ? (
              <Image
                alt={`${idx + 1}-place-LP`}
                src={images[placeIcons[idx]]()}
                slot="placeIcon"
              />
            ) : (
              <p
                slot="placeIcon"
                class="w-8 pt-[7px] px-[11px] pb-[5px] text-sm leading-normal font-semibold text-muted-foreground">
                {idx + 1}
              </p>
            )}
          </AppLeaderboardCard>
        ))
      }
      <SuggestionCard whatsSuggested="app" />
    </ItemsList>
    <ItemsList header="ENS best practices" seeAllLink="/ens-best-practices">
      {
        bestPracticesCategoryCards
          .slice(0, 4)
          .map((card, idx) => (
            <CategoryCard
              key={`best-practice-card-${idx}`}
              name="ENS Resolution"
              description="This ENSIP standardizes reverse and primary name resolution for all coin types, and defines how this resolution process operates across the  multichain Ethereum ecosystem."
              viewBestPracticesLink={`/ens-best-practices/${card}`}
              comingSoon={idx === 3}
              numberOfBestPractices={12}
            />
          ))
      }
    </ItemsList>
  </section>
</Layout>
