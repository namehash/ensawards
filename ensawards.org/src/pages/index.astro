---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import ContractNamingBanner from "../components/atoms/ContractNamingBanner.astro";
import CategoryCard from "../components/atoms/cards/CategoryCard.astro";
import LeaderboardCard from "../components/atoms/cards/LeaderboardCard.astro";
import SuggestionCard from "../components/atoms/cards/SuggestionCard.astro";
import Hero from "../components/molecules/Hero.astro";
import ItemsList from "../components/molecules/ItemsList.astro";
import { contractPipeline } from "../contract-pipelines";
import { BEST_PRACTICE_CATEGORIES } from "../data/bestPractices";
import Layout from "../layouts/Layout.astro";
import { OrgId } from "../types/organizations";
import { getOrgById } from "../utils/dataAccess";

const images = import.meta.glob<{ default: ImageMetadata }>("/src/assets/*.{jpeg,jpg,png,gif,svg}");
const placeIcons = [
  "/src/assets/firstPlaceAward.svg",
  "/src/assets/secondPlaceAward.svg",
  "/src/assets/thirdPlaceAward.svg",
];

const daoScores = contractPipeline();
---

<Layout>
  <Hero />
  <section
    id="previews-section"
    class="w-full box-border h-fit flex flex-col flex-nowrap justify-center items-center gap-10 py-5 sm:py-[60px] px-5 sm:px-8">
    <ContractNamingBanner />
    <ItemsList
      header="DAO leaderboard"
      linkData={{ link: "/leaderboard/daos", text: "All DAOs" }}
      containerStyles="gap-3 sm:gap-3">
      {
        Object.entries(daoScores).map(([scoreCategory, value], idx) => {
          const daoId = scoreCategory as OrgId;
          const org = getOrgById(daoId);
          const OrgIcon = org.icon;
          return (
            <LeaderboardCard
              key={`dao-leaderboard-card-${org.id}`}
              name={org.name}
              ensAwardsScore={value}
              viewDetailsLink={`/dao/${org.slug}`}
              viewDetailsText="DAO report">
              {idx < 3 ? (
                <Image
                  alt={`${idx + 1}-place`}
                  src={images[placeIcons[idx]]()}
                  slot="placeIcon"
                />
              ) : (
                <p
                  slot="placeIcon"
                  class="w-8 pt-[7px] px-[11px] pb-[5px] text-sm leading-normal font-semibold text-muted-foreground">
                  {idx + 1}
                </p>
              )}
              <OrgIcon slot="appIcon" className="w-10 h-10 rounded-md" />
            </LeaderboardCard>
          );
        })
      }
    </ItemsList>
    <ItemsList
      header="ENS best practices"
      linkData={{ link: "/ens-best-practices", text: "See all" }}>
      {
        BEST_PRACTICE_CATEGORIES.map((category, idx) => (
          <CategoryCard
            key={`best-practice-card-${idx}`}
            name={category.name}
            description={category.description}
            viewBestPracticesLink={`/ens-best-practices/${category.slug}`}
            comingSoon={category.status}
            numberOfBestPractices={category.bestPractices.length}
          />
        ))
      }
      <SuggestionCard whatsSuggested="best practice" />
    </ItemsList>
  </section>
</Layout>
